import serial
import time
import threading
import numpy as np

class ArduinoReader:
    def __init__(self, port, baud=9600):
        self.ser = serial.Serial(port=port, baudrate=baud, timeout=1)
        self.lock = threading.Lock() # ensure constant reading
        self.data = None # store data
        self.running = True
        self.thread = threading.Thread(target=self._read_serial, daemon=True) # always use a thread to read values (multithreading)
        self.thread.start()
        
    def _read_serial(self):
        while self.running:
            if self.ser.in_waiting:
                line = self.ser.readline().decode('utf-8').strip()
                if line is not None and line.count(",") == 3: # change based on # of sensors
                    with self.lock:
                        self.data = np.array(line.split(",")).astype(int)

    def __getitem__(self):
        with self.lock:
            return self.data  # or parse/return specific fields based on `key`

    def stop(self):
        self.running = False
        self.thread.join()
        self.ser.close()
